## Using names.txt (right click and 'Save Link/Target As...'), a 46K text file 
## containing over five-thousand first names, begin by sorting it into alphabetical 
## order. Then working out the alphabetical value for each name, multiply this value 
## by its alphabetical position in the list to obtain a name score.

## For example, when the list is sorted into alphabetical order, COLIN, which 
## is worth 3 + 15 + 12 + 9 + 14 = 53, is the 938th name in the list. So, COLIN would obtain a score of 938 Ã— 53 = 49714.

## What is the total of all the name scores in the file?

## The answer is 871198282.

namesscores<-function(){
 # y<-read.csv("https://projecteuler.net/project/resources/p022_names.txt") ## This is where the text file is stored online.
  y<-read.csv("p022_names.txt")
  y<-colnames(y) ## Convert the data frame to a list of the header names
  y[3303]<-"NA" ## There is a name called "NA" in the list which gets converted to a "NA." by read.csv() so this fixes it.
  y<-sort(y) ## Alphabetize
  q = sapply(y, function(x){sum(match(strsplit(x, "")[[1]], LETTERS))}) ## Find the values of the corresponding letters in each name of the list and add them up for each name.
  sum(1:length(y)*q) ## Perform an element-wise multiplication of the rank in the names list times the string value of each name and sum up the total.
}

## This can also be achieved using a for loop but I find it costs about 25% more time on a single core.

## Not the fastest, but >60% of that time is spent parsing the file.
## > system.time(namesscores())
##    user  system elapsed 
##    1.24    0.00    1.23 
